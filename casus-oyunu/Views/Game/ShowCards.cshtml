@using casus_oyunu.Models
@{
    ViewBag.Title = "Kartları Göster";
    var players = ViewBag.Players as List<casus_oyunu.Models.Player>;
    var selectedCategories = ViewBag.SelectedCategories as List<string> ?? new List<string>();
    var selectedWords = ViewBag.SelectedWords as List<string> ?? new List<string>();
    var selectedWord = ViewBag.SelectedWord as string ?? "";
    var allCategories = ViewBag.Categories as List<casus_oyunu.Models.Category> ?? CategoryData.Categories;
    int gameDuration = ViewBag.GameDuration ?? 8;
    bool gameStarted = ViewBag.GameStarted ?? false;
    var votes = ViewBag.Votes as Dictionary<string, string> ?? new Dictionary<string, string>();
}

@if (TempData["VoteWarning"] != null)
{
    <div class="alert alert-warning text-center">@TempData["VoteWarning"]</div>
}

<div class="row">
    <!-- Sol Taraf: Oyun Bilgileri ve Timer -->
    <div class="col-12 col-lg-4 mb-3">
        <div class="spy-bg p-3 rounded shadow-sm h-100">
            <h4 class="spy-title mb-3">Oyun Bilgileri</h4>
            
            <!-- Timer -->
            <div class="mb-3">
                <label class="form-label"><strong>Kalan Süre:</strong></label>
                <div class="timer-display text-center">
                    <span id="timer" class="h3 text-danger">@(gameDuration):00</span>
                </div>
            </div>
            
            <!-- Seçilen Kategoriler ve Kelimeler -->
            <div class="mb-3">
                <label class="form-label"><strong>Seçilen Kategoriler ve Kelimeler:</strong></label>
                <div class="accordion" id="selectedCategoriesAccordion">
                    @if (allCategories != null)
                    {
                        @foreach (var category in allCategories)
                        {
                            @if (selectedCategories.Contains(category.Name))
                            {
                                <div class="accordion-item spy-card">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@category.Name.Replace(" ","")">
                                            @category.Name
                                        </button>
                                    </h2>
                                    <div id="collapse-@category.Name.Replace(" ","")" class="accordion-collapse collapse" data-bs-parent="#selectedCategoriesAccordion">
                                        <div class="accordion-body">
                                            <div class="row">
                                                @if (category.Words != null)
                                                {
                                                    @foreach (var word in category.Words)
                                                    {
                                                        <div class="col-6 mb-1">
                                                            <small class="@(selectedWords.Contains(word) ? "text-success fw-bold" : "text-muted")">@word</small>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    
    <!-- Sağ Taraf: Oyuncu Kartları -->
    <div class="col-12 col-lg-8">
        <div class="spy-bg p-3 rounded shadow-sm">
            <h4 class="spy-title mb-3">Oyuncu Kartları</h4>
            <p class="text-center mb-3">Her oyuncu sırayla adını seçip kartını görebilir.</p>
            <!-- Oyunu Bitir Butonu -->
            <div class="text-center mb-3">
                <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#finishGameModal">Oyunu Bitir</button>
            </div>
            <!-- Oy Ver Butonu -->
            <div class="text-center mb-3">
                <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#voteModal">Oy Ver</button>
            </div>
            <!-- Oy Tablosu -->
            <div class="mb-3">
                <h5>Oylar</h5>
                <table class="table table-dark table-bordered">
                    <thead><tr><th>Oy Veren</th><th>Kime Oy Verdi</th></tr></thead>
                    <tbody>
                        @foreach (var player in players)
                        {
                            <tr>
                                <td>@player.Name</td>
                                <td>@(votes.ContainsKey(player.Name) ? votes[player.Name] : "-")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="row">
                @if (players != null)
                {
                    @foreach (var player in players)
                    {
                        <div class="col-12 col-md-6 mb-3">
                            <div class="card spy-card">
                                <div class="card-body text-center">
                                    <h5 class="card-title">@player.Name</h5>
                                    <button class="btn btn-outline-light mb-2" type="button" data-bs-toggle="modal" data-bs-target="#cardModal-@player.Name.Replace(" ","")">
                                        Kartı Göster
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Modal for each player's card -->
                            <div class="modal fade" id="cardModal-@player.Name.Replace(" ","")" tabindex="-1">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content spy-card">
                                        <div class="modal-header">
                                            <h5 class="modal-title">@player.Name - Kartı</h5>
                                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body text-center">
                                            <div class="alert alert-info spy-word">
                                                <h3>@player.AssignedWord</h3>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal: Oyun Bitir -->
<div class="modal fade" id="finishGameModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content spy-card">
            <form asp-action="FinishGame" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Ajanı Seç</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    @foreach (var player in players)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedPlayer" id="finish-@player.Name.Replace(" ","")" value="@player.Name" required />
                            <label class="form-check-label" for="finish-@player.Name.Replace(" ","")">@player.Name</label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Bitir</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Modal: Oy Ver -->
<div class="modal fade" id="voteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content spy-card">
            <form asp-action="Vote" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Oy Ver</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-2">
                        <label>Oy Veren:</label>
                        <select name="voter" class="form-select" id="voterSelect" required>
                            <option value="">Seçiniz</option>
                            @foreach (var player in players)
                            {
                                <option value="@player.Name">@player.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-2">
                        <label>Kime Oy Veriyor:</label>
                        <select name="voted" class="form-select" id="votedSelect" required>
                            <option value="">Seçiniz</option>
                            @foreach (var player in players)
                            {
                                <option value="@player.Name">@player.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning">Oy Ver</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal: Oyun Berabere -->
<div class="modal fade" id="drawGameModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content spy-card">
            <form id="drawGameForm" asp-action="DrawGame" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Oyun Berabere</h5>
                </div>
                <div class="modal-body">
                    <p id="drawGameMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Tamam</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    // Timer'ı localStorage ile koru
    const TIMER_KEY = 'spyfall_timer_left';
    let initialTime = @(gameDuration);
    let timeLeft = initialTime;
    if (localStorage.getItem(TIMER_KEY)) {
        let t = parseInt(localStorage.getItem(TIMER_KEY));
        if (!isNaN(t) && t > 0 && t <= initialTime) timeLeft = t;
    }
    const timerElement = document.getElementById('timer');
    function updateTimer() {
        if (timeLeft <= 0) {
            timerElement.textContent = 'Süre Doldu!';
            timerElement.className = 'h3 text-danger';
            localStorage.removeItem(TIMER_KEY);
            // Oyun berabere bitti, modal aç
            const spyName = '@(players != null && players.Count > 0 && ViewBag.Players != null && ViewBag.Players.Count > 0 && ViewBag.Players.Count > (ViewBag.SpyIndex ?? -1) ? ViewBag.Players[ViewBag.SpyIndex].Name : "(bilinmiyor)")';
            document.getElementById('drawGameMessage').textContent = `Kazanan olmadı. Oyun berabere. Ajan ${spyName} idi.`;
            var drawModal = new bootstrap.Modal(document.getElementById('drawGameModal'));
            drawModal.show();
            return;
        }
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerElement.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
        if (timeLeft <= 60) {
            timerElement.className = 'h3 text-warning';
        } else if (timeLeft <= 120) {
            timerElement.className = 'h3 text-danger';
        }
        timeLeft--;
        localStorage.setItem(TIMER_KEY, timeLeft);
    }
    updateTimer();
    const timerInterval = setInterval(updateTimer, 1000);
    window.addEventListener('beforeunload', function() {
        clearInterval(timerInterval);
    });
    // Oyun bitince veya sayfa terk edilince timer'ı temizle
    document.getElementById('drawGameForm')?.addEventListener('submit', function() {
        localStorage.removeItem(TIMER_KEY);
    });
    document.getElementById('finishGameModal')?.addEventListener('submit', function() {
        localStorage.removeItem(TIMER_KEY);
    });

    // Oy veren kişi kendine oy veremesin
    document.getElementById('voterSelect').addEventListener('change', function() {
        var voter = this.value;
        var votedSelect = document.getElementById('votedSelect');
        Array.from(votedSelect.options).forEach(function(opt) {
            opt.disabled = (opt.value === voter && voter !== "");
        });
        // Eğer seçili olan kendisi ise, seçimi sıfırla
        if (votedSelect.value === voter) votedSelect.value = "";
    });
</script> 